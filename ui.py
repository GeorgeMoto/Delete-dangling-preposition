import os
import ttkbootstrap as ttk
from tkinter import filedialog, messagebox
from logic import fix_hanging_prepositions  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É
import logging


def log_separator():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –ª–æ–≥-—Ñ–∞–π–ª."""
    logging.info("---" * 30)


def select_file():
    """–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ .docx —Ñ–∞–π–ª–∞."""
    try:
        file_path = filedialog.askopenfilename(filetypes=[("Word Documents", "*.docx")])
        if file_path:
            process_files([file_path])
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞: {e}", exc_info=True)
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª: {e}")
        log_separator()


def select_folder():
    """–í—ã–±–æ—Ä –ø–∞–ø–∫–∏ —Å .docx —Ñ–∞–π–ª–∞–º–∏."""
    try:
        folder_path = filedialog.askdirectory()
        if folder_path:
            docx_files = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if f.endswith(".docx")]
            if not docx_files:
                messagebox.showwarning("–û—à–∏–±–∫–∞", "–í –ø–∞–ø–∫–µ –Ω–µ—Ç .docx —Ñ–∞–π–ª–æ–≤")
                return
            process_files(docx_files)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–∞–ø–∫–∏: {e}", exc_info=True)
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É: {e}")
        log_separator()


def process_files(files):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ output_files/."""
    if not files:
        return

    output_dir = os.path.join(os.path.dirname(files[0]), "output_files")
    os.makedirs(output_dir, exist_ok=True)

    errors = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫

    for file_path in files:
        output_path = os.path.join(output_dir, os.path.basename(file_path))

        try:
            # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
            logging.info(f"–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: {file_path}")

            # –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª
            fix_hanging_prepositions(file_path, output_path)

            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            logging.info(f"–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {output_path}")
            messagebox.showinfo("‚úÖ –ì–æ—Ç–æ–≤–æ!", f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {output_path}")
        except Exception as e:
            error_message = f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}"
            errors.append(error_message)
            logging.error(error_message, exc_info=True)

        log_separator()

    # –ï—Å–ª–∏ –±—ã–ª–∏ –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
    if errors:
        messagebox.showerror("–û—à–∏–±–∫–∞", "\n".join(errors))


# === –°–æ–∑–¥–∞–Ω–∏–µ UI ===
def run_ui():
    root = ttk.Window(themename="superhero")  # –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
    root.title("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏—Å—è—á–∏—Ö –ø—Ä–µ–¥–ª–æ–≥–æ–≤")
    root.geometry("400x250")
    root.resizable(False, False)

    ttk.Label(root, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É", font=("Arial", 14, "bold")).pack(pady=10)

    ttk.Button(root, text="üìÑ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª", command=select_file, bootstyle="primary").pack(pady=5, padx=20, fill="x")
    ttk.Button(root, text="üìÅ –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É", command=select_folder, bootstyle="info").pack(pady=5, padx=20, fill="x")

    root.mainloop()